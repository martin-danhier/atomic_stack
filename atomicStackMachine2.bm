machine atomicStackMachine2
refines atomicStackMachine
sees atomicStackContext
variables
    // Extended variables
    bar_from            // Where is the element going to 
    barTo              // Where is the element coming from
    workingElement     // Handled element
    stack               // Advanced stack : contains the position and the type of the elements
    // New variable
    elementLift                // Lift carrying the working element
invariants
    @elementLift_type elementLift ∈ 0 ‥ nbFloors 
events
    event INITIALISATION extends INITIALISATION
    then
        @elementLift_init elementLift ≔ 0
    end

    // raise the elementLift
    event Lift_up
    where
        @not_top elementLift < nbFloors
        @lock_when_inserting barTo = 0
    then
        @set_elementLift elementLift ≔ elementLift + 1
    end

    // // set the elementLift to a specific floor
    // event Lift_set
    // any to_floor
    // where
    //     @to_floor_type to_floor ∈ 0 ‥ nbFloors
    //     @not_there_already to_floor ≠ elementLift
    // then
    //     @set_elementLift elementLift ≔ to_floor
    // end


    // lower the elementLift
    event Lift_down
    where
        @not_top elementLift > 0
        @lock_when_inserting barTo = 0
    then
        @set_elementLift elementLift ≔ elementLift - 1
    end

    // Generate a new working element
    event Bar_new extends Bar_new
    where
        @elementLift_down elementLift = 0
    end

    event Bar_in extends Bar_in
    where
        @current_floor destination_floor = elementLift
    end

    // Apply the insertion of a bar
    event Bar_insert extends Bar_insert
    where
        @elementLift_in_the_right_floor elementLift = barTo
    end

    // Withdraw a bar from the stack
    event Bar_withdraw extends Bar_withdraw
    where
        @elementLift_in_the_right_floor elementLift = from_floor
    end

    // Remove the bar and send it away
    event Bar_out extends Bar_out
    where
        @elementLift_down elementLift = 0
    end
end